version: '3.8'

services:

  db:
    build: ./pgsql
    container_name: app_db
    volumes:
      - ./pg_data:/var/lib/postgresql/data/
    env_file:
      /root/.env
    restart: always
    networks:
      - backend

  django:
    build: ./django
    container_name: app_django
    entrypoint: /start/run.sh
    volumes:
      - ./nginx_conf:/etc/nginx/conf.d/
      - ./django/app:/app/
      - /etc/letsencrypt:/etc/letsencrypt:ro
    env_file:
      /root/.env
    expose:
      - "8000"
    restart: always
    depends_on:
      - db
      - redis
    networks:
      - frontend
      - backend

  ofelia:
    image: mcuadros/ofelia:latest
    container_name: app_ofelia
    restart: always
    depends_on:
      - scrapy
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - backend

  scrapy:
    build: ./scrapy
    container_name: app_parsers
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.conf_parsers.schedule: "@weekly"
      ofelia.job-exec.conf_parsers.command: "python run.py"
    restart: always
    env_file:
      /root/.env
    volumes:
      - ./scrapy:/usr/src/app/
    depends_on:
      - db
      - django
    networks:
      - backend

  nginx:
    image: nginx:latest
    container_name: app_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./www:/usr/share/nginx/html
      - ./nginx_conf:/etc/nginx/conf.d/
      - ./certbot:/var/www/certbot:rw
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - django
    restart: always
    networks:
      - frontend

networks:
  frontend:
  backend:
    