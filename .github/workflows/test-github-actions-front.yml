name: 'Update frontend content and test new release (on test server)'

on:
  workflow_dispatch:
  push:
    branches:
      - frontend
      
jobs:
  update_and_test_front:
    runs-on: 
      labels: test
    steps:

      - name: get current date-time and set it to env var
        run: echo "NOW=$(date +'%Y-%m-%dT%H-%M-%S')" >> $GITHUB_ENV

      - name: backup priveus version of frontend
        run: |
          echo 'current date and time is ${{ env.NOW }}'
          sudo cp -R /usr/data/www /usr/data/www-${{ env.NOW }}
          echo 'previous version backup is done'

      - name: execute script for update frontend with new version
        run: |
          sudo /usr/local/bin/front_update.sh
          echo 'frontend updated'

      - name: check site http code
        run: echo "HTTP_CODE=$(curl -i -k --connect-timeout 20 -m 30 https://test.theconf.ru -o /dev/null -w '%{http_code}\n' -s)" >> $GITHUB_ENV

      - name: print success message if http status code is 200
        run: |
          echo 'http status code is ${{ env.HTTP_CODE }}'
          echo 'front updated successful!'
        if: ${{ env.HTTP_CODE == 200 }}

      - name: restore privious version if http status code isn't 200
        run: |
          echo 'http status code is ${{ env.HTTP_CODE }}'
          echo 'front updated failed! Restoring backup'
          sudo rm -rf /usr/data/www/* 
          sudo cp -R /usr/data/www-${{ env.NOW }}/* /usr/data/www 
          echo 'Backup was restored'
        if: ${{ env.HTTP_CODE != 200 }}

      - name: clean up backup
        run: |
          echo 'start cleaning up directory /usr/data/www-${{ env.NOW }}'
          sudo rm -rf /usr/data/www-${{ env.NOW }} 
          echo 'clean up completed'
