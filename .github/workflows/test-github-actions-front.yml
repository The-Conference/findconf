name: 'Update frontend content and test new release (on test server)'

on:
  workflow_dispatch:
  workflow_call:
  push:
    branches:
      - 'frontend'

env:
  TMP_DIR: '/tmp/download'
      
jobs:
  update_and_test_front:
    runs-on: 
      labels: test
    steps:

      - name: get current date-time and set it to env var
        run: echo "NOW=$(date +'%Y-%m-%dT%H-%M-%S')" >> $GITHUB_ENV

      - name: check temp dir exist and create it if not
        run: |
          if [ ! -d $TMP_DIR ]; then
            sudo mkdir $TMP_DIR
            echo "$TMP_DIR was not found. Created"
          fi

      - name: backup priveus version of frontend
        run: |
          echo 'current date and time is ${{ env.NOW }}'
          sudo cp -R /usr/data/www /usr/data/www-${{ env.NOW }}
          echo 'previous version backup is done'

      - name: Get archive of new version of frontend and unzip it
        run: |
          sudo su && cd $TMP_DIR && sudo wget https://github.com/The-Conference/findconf/archive/refs/heads/frontend.zip
          sudo unzip -o $TMP_DIR/frontend.zip
          echo 'The new version of frontend was got'

      - name: Update frontend with new version
        run: |
          sudo rm -rf /usr/data/www/*
          sudo cp -R $TMP_DIR/findconf-frontend/build/* /usr/data/www
          sudo rm -rf $TMP_DIR/findconf-frontend $TMP_DIR/frontend.zip
          echo "all files was updated"

      - name: check site http code
        run: echo "HTTP_CODE=$(curl -i -k --connect-timeout 20 -m 30 https://test.theconf.ru -o /dev/null -w '%{http_code}\n' -s)" >> $GITHUB_ENV

      - name: print success message if http status code is 200
        run: |
          echo 'http status code is ${{ env.HTTP_CODE }}'
          echo 'front updated successful!'
          echo "F_CODE=0" >> $GITHUB_ENV
        if: ${{ env.HTTP_CODE != 200 }}

      - name: restore privious version if http status code isn't 200
        run: |
          echo 'http status code is ${{ env.HTTP_CODE }}'
          echo 'front updated failed! Restoring backup'
          sudo rm -rf /usr/data/www/* 
          sudo cp -R /usr/data/www-${{ env.NOW }}/* /usr/data/www 
          echo 'Backup was restored'
          echo "F_CODE=1" >> $GITHUB_ENV
        if: ${{ env.HTTP_CODE == 200 }}

      - name: clean up backup
        run: |
          echo 'start cleaning up directory /usr/data/www-${{ env.NOW }}'
          sudo rm -rf /usr/data/www-${{ env.NOW }} 
          echo 'clean up completed'
          
      - name: Job successful finished
        run: echo 'Exit code is ${{ env.F_CODE }}. Job finished success!'
        if: ${{ env.F_CODE == 0 }}

      - name: Job finished failure
        run: |
          echo 'Exit code is ${{ env.F_CODE }}. Job failed!'
          exit 1
        if: ${{ env.F_CODE == 1 }}
